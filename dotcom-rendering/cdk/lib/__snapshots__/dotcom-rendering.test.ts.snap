// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The DotcomRendering stack matches the snapshot 1`] = `
{
  "Metadata": {
    "gu:cdk:constructs": [
      "GuVpcParameter",
      "GuSubnetListParameter",
      "GuSubnetListParameter",
      "GuDistributionBucketParameter",
      "GuLoggingStreamNameParameter",
      "GuSecurityGroup",
      "GuStringParameter",
      "GuClassicLoadBalancer",
      "GuSecurityGroup",
      "GuAllowPolicy",
      "GuAllowPolicy",
      "GuAllowPolicy",
      "GuAllowPolicy",
      "GuInstanceRole",
      "GuDescribeEC2Policy",
      "GuLogShippingPolicy",
      "GuGetDistributablePolicy",
      "GuParameterStoreReadPolicy",
      "GuAmiParameter",
      "GuHttpsEgressSecurityGroup",
      "GuWazuhAccess",
      "GuAutoScalingGroup",
    ],
    "gu:cdk:version": "TEST",
  },
  "Outputs": {
    "LoadBalancerUrl": {
      "Value": {
        "Fn::GetAtt": [
          "InternalLoadBalancer",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": {
    "AMIRendering": {
      "Description": "Amazon Machine Image ID for the app rendering. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "DistributionBucketName": {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "ELBLogsParameter": {
      "Default": "/PROD/frontend/rendering/elb.logs.bucketName",
      "Description": "S3 Bucket Name for ELB logs",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "LoggingStreamName": {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "PrivateSubnets": {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "PublicSubnets": {
      "Default": "/account/vpc/primary/subnets/public",
      "Description": "A list of public subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "VpcId": {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within. Should NOT be the account default VPC.",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
  },
  "Resources": {
    "AllowPolicyCloudwatchLogsA783E5B4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "cloudwatch:*",
                "logs:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AllowPolicyCloudwatchLogsA783E5B4",
        "Roles": [
          {
            "Ref": "InstanceRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AllowPolicyDescribeDecryptKmsE91286F3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:kms:eu-west-1:",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":FrontendConfigKey",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AllowPolicyDescribeDecryptKmsE91286F3",
        "Roles": [
          {
            "Ref": "InstanceRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AllowPolicyGetArtifactsBucket2A1CDA44": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "DistributionBucketName",
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AllowPolicyGetArtifactsBucket2A1CDA44",
        "Roles": [
          {
            "Ref": "InstanceRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AllowPolicyGetSsmParamsByPathB54B2DE8": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:GetParametersByPath",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:ssm:eu-west-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter/PROD/frontend/rendering/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:ssm:eu-west-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter/frontend/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:ssm:eu-west-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter/dotcom/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AllowPolicyGetSsmParamsByPathB54B2DE8",
        "Roles": [
          {
            "Ref": "InstanceRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutoscalingGroup": {
      "Properties": {
        "HealthCheckGracePeriod": 120,
        "HealthCheckType": "ELB",
        "LaunchTemplate": {
          "LaunchTemplateId": {
            "Ref": "frontendPRODrendering10B74E2A",
          },
          "Version": {
            "Fn::GetAtt": [
              "frontendPRODrendering10B74E2A",
              "LatestVersionNumber",
            ],
          },
        },
        "LoadBalancerNames": [
          {
            "Ref": "InternalLoadBalancer",
          },
        ],
        "MaxSize": "4",
        "MinSize": "1",
        "Tags": [
          {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "rendering",
          },
          {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/dotcom-rendering",
          },
          {
            "Key": "LogKinesisStreamName",
            "PropagateAtLaunch": true,
            "Value": {
              "Ref": "LoggingStreamName",
            },
          },
          {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "frontend",
          },
          {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": "PROD",
          },
          {
            "Key": "SystemdUnit",
            "PropagateAtLaunch": true,
            "Value": "rendering.service",
          },
        ],
        "VPCZoneIdentifier": {
          "Ref": "PrivateSubnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "Backend5xxAlarm": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:eu-west-1:",
                {
                  "Ref": "AWS::AccountId",
                },
                ":Frontend-PROD-CriticalAlerts",
              ],
            ],
          },
        ],
        "AlarmDescription": "Notify if 5XX backend errors is GreaterThanOrEqualToThreshold of 100 over 5 period(s) of 60 seconds",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "LoadBalancerName",
            "Value": {
              "Ref": "InternalLoadBalancer",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "HTTPCode_Backend_5XX",
        "Namespace": "AWS/ELB",
        "OKActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:eu-west-1:",
                {
                  "Ref": "AWS::AccountId",
                },
                ":Frontend-PROD-CriticalAlerts",
              ],
            ],
          },
        ],
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 100,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "DescribeEC2PolicyFF5F9295": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": [
          {
            "Ref": "InstanceRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetDistributablePolicyRenderingCA2FF5C7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "DistributionBucketName",
                    },
                    "/frontend/PROD/rendering/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicyRenderingCA2FF5C7",
        "Roles": [
          {
            "Ref": "InstanceRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuHttpsEgressSecurityGroupRenderingE17B2710": {
      "Properties": {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "rendering",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/dotcom-rendering",
          },
          {
            "Key": "Stack",
            "Value": "frontend",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuLogShippingPolicy981BFE5A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuLogShippingPolicy981BFE5A",
        "Roles": [
          {
            "Ref": "InstanceRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "InstanceRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore",
              ],
            ],
          },
        ],
        "Path": "/",
        "Tags": [
          {
            "Key": "App",
            "Value": "rendering",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/dotcom-rendering",
          },
          {
            "Key": "Stack",
            "Value": "frontend",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "InstanceSecurityGroup": {
      "Properties": {
        "GroupDescription": "rendering instance",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.248.136.0/22",
            "Description": "TCP 9000 ingress",
            "FromPort": 9000,
            "IpProtocol": "tcp",
            "ToPort": 9000,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "rendering",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/dotcom-rendering",
          },
          {
            "Key": "Stack",
            "Value": "frontend",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "InternalLoadBalancer": {
      "Properties": {
        "AccessLoggingPolicy": {
          "EmitInterval": 5,
          "Enabled": true,
          "S3BucketName": {
            "Ref": "ELBLogsParameter",
          },
          "S3BucketPrefix": "ELBLogs/frontend/rendering/PROD",
        },
        "CrossZone": true,
        "HealthCheck": {
          "HealthyThreshold": "2",
          "Interval": "30",
          "Target": "HTTP:9000/_healthcheck",
          "Timeout": "10",
          "UnhealthyThreshold": "10",
        },
        "Listeners": [
          {
            "InstancePort": "9000",
            "InstanceProtocol": "http",
            "LoadBalancerPort": "80",
            "Protocol": "http",
          },
        ],
        "LoadBalancerName": "frontend-PROD-rendering-ELB",
        "Scheme": "internal",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "InternalLoadBalancerSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "Subnets": {
          "Ref": "PublicSubnets",
        },
        "Tags": [
          {
            "Key": "App",
            "Value": "rendering",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/dotcom-rendering",
          },
          {
            "Key": "Stack",
            "Value": "frontend",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
    },
    "InternalLoadBalancerRenderingSecurityGroup53E3F9A7": {
      "Properties": {
        "GroupDescription": "DotcomRendering/InternalLoadBalancerRendering/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Default rule allow on 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "rendering",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/dotcom-rendering",
          },
          {
            "Key": "Stack",
            "Value": "frontend",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "InternalLoadBalancerSecurityGroup": {
      "Properties": {
        "GroupDescription": "Allows HTTP and HTTPS inbound connections from within the VPC",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.248.136.0/22",
            "Description": "TCP 80 ingress",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
          {
            "CidrIp": "10.248.136.0/22",
            "Description": "TCP 443 ingress",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "rendering",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/dotcom-rendering",
          },
          {
            "Key": "Stack",
            "Value": "frontend",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LatencyScalingAlarm": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Fn::GetAtt": [
              "ScaleUpPolicy",
              "Arn",
            ],
          },
        ],
        "AlarmDescription": "Scale up if latency is GreaterThanOrEqualToThreshold of 0.3 over 1 period(s) of 60 seconds",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "LoadBalancerName",
            "Value": {
              "Ref": "InternalLoadBalancer",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "Latency",
        "Namespace": "AWS/ELB",
        "OKActions": [
          {
            "Fn::GetAtt": [
              "ScaleDownPolicy",
              "Arn",
            ],
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0.3,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ParameterStoreReadRenderingFDC91AAA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/PROD/frontend/rendering",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/PROD/frontend/rendering/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": [
          {
            "Ref": "InstanceRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ScaleDownPolicy": {
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "AutoScalingGroupName": {
          "Ref": "AutoscalingGroup",
        },
        "Cooldown": "120",
        "ScalingAdjustment": -1,
      },
      "Type": "AWS::AutoScaling::ScalingPolicy",
    },
    "ScaleUpPolicy": {
      "Properties": {
        "AdjustmentType": "PercentChangeInCapacity",
        "AutoScalingGroupName": {
          "Ref": "AutoscalingGroup",
        },
        "Cooldown": "600",
        "ScalingAdjustment": 100,
      },
      "Type": "AWS::AutoScaling::ScalingPolicy",
    },
    "WazuhSecurityGroup": {
      "Properties": {
        "GroupDescription": "Allow outbound traffic from wazuh agent to manager",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh event logging",
            "FromPort": 1514,
            "IpProtocol": "tcp",
            "ToPort": 1514,
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh agent registration",
            "FromPort": 1515,
            "IpProtocol": "tcp",
            "ToPort": 1515,
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/dotcom-rendering",
          },
          {
            "Key": "Stack",
            "Value": "frontend",
          },
          {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "frontendPRODrendering10B74E2A": {
      "DependsOn": [
        "InstanceRole",
      ],
      "Properties": {
        "LaunchTemplateData": {
          "IamInstanceProfile": {
            "Arn": {
              "Fn::GetAtt": [
                "frontendPRODrenderingProfileD69551A3",
                "Arn",
              ],
            },
          },
          "ImageId": {
            "Ref": "AMIRendering",
          },
          "InstanceType": "t4g.micro",
          "MetadataOptions": {
            "HttpTokens": "required",
          },
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "GuHttpsEgressSecurityGroupRenderingE17B2710",
                "GroupId",
              ],
            },
            {
              "Fn::GetAtt": [
                "WazuhSecurityGroup",
                "GroupId",
              ],
            },
            {
              "Fn::GetAtt": [
                "InstanceSecurityGroup",
                "GroupId",
              ],
            },
          ],
          "TagSpecifications": [
            {
              "ResourceType": "instance",
              "Tags": [
                {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                {
                  "Key": "gu:repo",
                  "Value": "guardian/dotcom-rendering",
                },
                {
                  "Key": "Name",
                  "Value": "DotcomRendering/frontend-PROD-rendering",
                },
                {
                  "Key": "Stack",
                  "Value": "frontend",
                },
                {
                  "Key": "Stage",
                  "Value": "PROD",
                },
              ],
            },
            {
              "ResourceType": "volume",
              "Tags": [
                {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                {
                  "Key": "gu:repo",
                  "Value": "guardian/dotcom-rendering",
                },
                {
                  "Key": "Name",
                  "Value": "DotcomRendering/frontend-PROD-rendering",
                },
                {
                  "Key": "Stack",
                  "Value": "frontend",
                },
                {
                  "Key": "Stage",
                  "Value": "PROD",
                },
              ],
            },
          ],
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "",
                [
                  "#!/bin/bash -ev
groupadd frontend
useradd -r -m -s /usr/bin/nologin -g frontend dotcom-rendering
cd /home/dotcom-rendering
aws --region eu-west-1 s3 cp s3://",
                  {
                    "Ref": "DistributionBucketName",
                  },
                  "/frontend/PROD/rendering/rendering.tar.gz ./
tar -zxf rendering.tar.gz rendering
chown -R dotcom-rendering:frontend rendering
cd rendering
mkdir /var/log/dotcom-rendering
chown -R dotcom-rendering:frontend /var/log/dotcom-rendering
cat > /etc/systemd/system/rendering.service << EOF
[Unit]
Description=rendering
After=network.target
[Service]
WorkingDirectory=/home/dotcom-rendering/rendering
Type=simple
User=dotcom-rendering
Group=frontend
StandardError=journal
StandardOutput=journal
Environment=TERM=xterm-256color
Environment=NODE_ENV=production
Environment=GU_STAGE=PROD
Environment=GU_APP=rendering
Environment=GU_STACK=frontend
ExecStart=make prod
Restart=on-failure
[Install]
WantedBy=multi-user.target
EOF
systemctl enable rendering
systemctl start rendering",
                ],
              ],
            },
          },
        },
        "TagSpecifications": [
          {
            "ResourceType": "launch-template",
            "Tags": [
              {
                "Key": "gu:cdk:version",
                "Value": "TEST",
              },
              {
                "Key": "gu:repo",
                "Value": "guardian/dotcom-rendering",
              },
              {
                "Key": "Name",
                "Value": "DotcomRendering/frontend-PROD-rendering",
              },
              {
                "Key": "Stack",
                "Value": "frontend",
              },
              {
                "Key": "Stage",
                "Value": "PROD",
              },
            ],
          },
        ],
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "frontendPRODrenderingProfileD69551A3": {
      "Properties": {
        "Roles": [
          {
            "Ref": "InstanceRole",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "loadBalancerDnsName0B1DEBAD": {
      "Properties": {
        "Name": "/frontend/PROD/rendering.loadBalancerDnsName",
        "Tags": {
          "Stack": "frontend",
          "Stage": "PROD",
          "gu:cdk:version": "TEST",
          "gu:repo": "guardian/dotcom-rendering",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "InternalLoadBalancer",
            "DNSName",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
  },
}
`;
