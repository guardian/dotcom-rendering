on:
  workflow_call:
    inputs:
      container-image:
        description: 'Image used by DCR service'
        required: true
        type: string

jobs:
  playwright-secure:
    runs-on: ubuntu-latest
    services:
      DCR:
        image: ${{ inputs.container-image }}
        ports:
          - 9000:9000
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node environment
        uses: ./.github/actions/setup-node-env

      - name: Set up nginx secure server
        run: |
          # Turn off mandb updates to speed up setup
          sudo mv /usr/bin/mandb /usr/bin/mandb-OFF
          sudo cp -p /bin/true /usr/bin/mandb
          # Update dependencies
          sudo apt-get update -y
          # Install libnss3-tools
          sudo apt-get install -y libnss3-tools
          # Install mkcert
          wget -q https://github.com/FiloSottile/mkcert/releases/download/v1.4.3/mkcert-v1.4.3-linux-amd64
          sudo cp mkcert-v1.4.3-linux-amd64 /usr/local/bin/mkcert
          sudo chmod +x /usr/local/bin/mkcert
          # Install dev-nginx
          wget -q https://github.com/guardian/dev-nginx/releases/latest/download/dev-nginx.tar.gz
          sudo mkdir -p /usr/local/bin/dev-nginx
          sudo tar -xzf dev-nginx.tar.gz -C /usr/local
          sudo chmod +x /usr/local/bin/dev-nginx
          # Create https://r.thegulocal.com
          sudo ./dotcom-rendering/scripts/nginx/setup-ci.sh
          # Move the dotcom-rendering nginx config to the right place for GitHub runners and restart nginx
          sudo cp /etc/nginx/servers/dotcom-rendering.conf /etc/nginx/conf.d/dotcom-rendering.conf
          sudo dev-nginx restart-nginx

      - name: Check local server
        run: |
          STATUS=$(curl -o /dev/null -s -w "%{http_code}" -k http://localhost:9000)
          echo "HTTP Status: $STATUS"
          if [ "$STATUS" -eq 200 ]; then
            echo "Local server is reachable with status 200"
          else
            echo "Local server is not reachable. Status: $STATUS"
            exit 1
          fi

      - name: Check secure server
        run: |
          STATUS=$(curl -o /dev/null -s -w "%{http_code}" -k https://r.thegulocal.com)
          echo "HTTPS Status: $STATUS"
          if [ "$STATUS" -eq 200 ]; then
            echo "Secure server is reachable with status 200"
          else
            echo "Secure server is not reachable. Status: $STATUS"
            exit 1
          fi

      - name: Install Playwright Browsers
        run: pnpm playwright install --with-deps chromium
        working-directory: ./dotcom-rendering

      - name: Run Playwright
        run: pnpm playwright test e2e.secure.spec.ts
        working-directory: ./dotcom-rendering
        env:
          CI: true
          NODE_ENV: production
          NODE_TLS_REJECT_UNAUTHORIZED: 0
          IDAPI_CLIENT_ACCESS_TOKEN: ${{ secrets.IDAPI_CLIENT_ACCESS_TOKEN }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-secure
          path: ./dotcom-rendering/playwright-report
          retention-days: 5
