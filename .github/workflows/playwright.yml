on:
  workflow_call:
    inputs:
      container-image:
        description: 'Image used by DCR service'
        required: true
        type: string

jobs:
  playwright:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # keep aligned with --shard parameter used by `playwright test` below
        group: [1, 2, 3, 4, 5, 6, 7, 8]
    services:
      DCR:
        image: ${{ inputs.container-image }}
        ports:
          - 9000:9000
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node environment
        uses: ./.github/actions/setup-node-env

      - name: Set up nginx secure server https://r.thegulocal.com
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libnss3-tools
          sudo service nginx restart
          wget -q https://github.com/FiloSottile/mkcert/releases/download/v1.4.3/mkcert-v1.4.3-linux-amd64
          wget -q https://github.com/guardian/dev-nginx/releases/latest/download/dev-nginx.tar.gz
          sudo cp mkcert-v1.4.3-linux-amd64 /usr/local/bin/mkcert
          sudo chmod +x /usr/local/bin/mkcert
          sudo mkdir -p /usr/local/bin/dev-nginx
          sudo tar -xzf dev-nginx.tar.gz -C /usr/local
          sudo chmod +x /usr/local/bin/dev-nginx
          sudo ./dotcom-rendering/scripts/nginx/setup-nginx.sh
          sudo dev-nginx restart-nginx

      - name: Install Playwright Browsers
        run: pnpm playwright install --with-deps chromium
        working-directory: ./dotcom-rendering

      - name: Run Playwright
        run: pnpm playwright test --shard=${{ matrix.group }}/8
        working-directory: ./dotcom-rendering
        env:
          NODE_ENV: production
          IDAPI_CLIENT_ACCESS_TOKEN: ${{ secrets.IDAPI_CLIENT_ACCESS_TOKEN }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.group }}
          path: ./dotcom-rendering/playwright-report
          retention-days: 5
